snippet vmixins
mixins: [${1:lifecycleHooks}],
endsnippet

snippet vlifecycleHooks
export const lifecycleHooks = {
  // Computeds
  computed: {
    componentName() {
      return `${this.$options.name} component`;
    },
  },
  // LifeCycle Hooks
  created() {
    logger.info(`${this.componentName} created ${hookMessageSuffix}`);
    logger.info('component data', this.$data);
  },
  mounted() {
    logger.info(`${this.componentName} mounted ${hookMessageSuffix}`);
  },
  updated() {
    logger.info(`${this.componentName} updated ${hookMessageSuffix}`);
  },
  destroyed() {
    logger.info(`${this.componentName} destroyed ${hookMessageSuffix}`);
  },
};
endsnippet

snippet vwatcher
export const ${1:heroWatchers} = {
  // Watchers
  watch: {
    ${2:selectedHero}: {
      immediate: true,
      deep: true,
      handler(newValue, oldValue) {
        logger.info('old values', oldValue);
        logger.info('new values', newValue);
      },
    },
  },
};
endsnippet

snippet vlogger
import { format } from 'date-fns';
const displayTimeFormat = 'HH:mm:ss.SSS';

export const logger = {
  info(message, data) {
    console.log(`Log ${format(Date.now(), displayTimeFormat)}: ${message}`);
    if (data) {
      console.log(JSON.stringify(data, null, 2));
    }
  },
};
endsnippet

snippet datimeformat
export const inputDateFormat = 'YYYY-MM-DD';
export const displayDateFormat = 'MMM DD, YYYY';
export const displayTimeFormat = 'HH:mm:ss.SSS';
endsnippet
